#
# Schemas must have at least a query root type
#
schema {
    query: Query
}

type Query {
    surveyee: [Surveyee]
}

type Surveyee {
    # Unique Identifier
    uniqueId: String!
    # User's name
    name: String!
    company: String!
    email: String
    mobile: String
    officePhone: String
    contactName: String
    surveys: [Survey]
    state: State #Enum
    gender: Gender!
    ageRange: String!
}

type Surveyor {
    name: String!
    surveysAdministered: [Survey]
}

type Survey {
    surveyee: Surveyee
    date: String!
    survey: SurveyTemplate
    questions: [Question]
}

interface Question {
    queryString: String!
    category: String
    questionType: String!
}

type MultipleAnswerQuestion implements Question{
    queryString: String!
    category: String
    questionType: String!
    values: [String]
    subQuestions: [Question]
}

type CommentQuestion implements Question{
    queryString: String!
    category: String
    questionType: String!
    comment: String
}

type NumberQuestion implements Question{
    queryString: String!
    category: String
    questionType: String!
    value: Int
}

type NPSQuestion implements Question {
    queryString: String!
    category: String
    questionType: String!
    score: Int
    comment: String
}

type BinaryQuestion implements Question {
    queryString: String!
    category: String
    questionType: String!
    isYes: Boolean
    yesQuestion: [Question]
    noQuestion: [Question]
}

type RatingQuestion implements Question {
    queryString: String!
    category: String
    questionType: String!
    score: Int
    goodQuestion: Question
    neutralQuestion: Question
    improvementQuestion: Question
}

type SurveyTemplate {
    questions: [Question]
    surveysAdministered: [Survey]
}

enum Gender {
    MALE,
    FEMALE,
    OTHER
}
enum State {
    SA,
    VIC,
    ACT,
    TAS,
    NZ, # New Zealand apparently
    NSW,
    QLD,
    WA,
    NT,
    CONFIDENTIAL
}