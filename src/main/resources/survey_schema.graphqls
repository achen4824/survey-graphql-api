#
# Schemas must have at least a query root type
#
schema {
    query: Query
}

type Query {
    surveyee: [Surveyee]
}

type Surveyee {
    # Unique Identifier
    uniqueId: String!
    # User's name
    name: String!
    company: String!
    email: String
    mobile: String
    surveys: [Survey]
    state: State #Enum
    gender: Gender!
    ageRange: String!
}

type Surveyor {
    name: String!
    surveysAdministered: [Survey]
}

type Survey {
    surveyee: Surveyee
    date: String!
    survey: SurveyTemplate
    questions: [Question]
}

interface Question {
    query_: QuestionTemplate! # Query is a defined word
}

type NPSQuestion implements Question {
    query_: NPSQuestionTemplate!
    score: Int
    comment: String
}

type BinaryQuestion implements Question {
    query_: BinaryQuestionTemplate!
    isYes: Boolean!
    yesQuestion: NPSQuestion
    noQuestion: NPSQuestion

}

type SurveyTemplate {
    questions: [QuestionTemplate]
    surveysAdministered: [Survey]
}

interface QuestionTemplate {
    query_: String!
    category: String
}

type NPSQuestionTemplate implements QuestionTemplate {
    query_: String!
    category: String
}

type BinaryQuestionTemplate implements QuestionTemplate {
    query_: String!
    category: String
    yesQuestion: NPSQuestionTemplate
    noQuestion: NPSQuestionTemplate
}

enum Gender {
    MALE,
    FEMALE,
    OTHER
}
enum State {
    SA,
    VIC,
    ACT,
    TAS,
    NZ, # New Zealand apparently
    NSW,
    QLD,
    WA,
    NT,
    CONFIDENTIAL
}